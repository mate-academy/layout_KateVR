{"version":3,"sources":["scripts/main.js"],"names":["customSelects","document","getElementsByClassName","selectElement","i","getElementsByTagName","options","selectedDiv","createElement","setAttribute","innerHTML","selectedIndex","appendChild","optionListDiv","j","length","optionDiv","addEventListener","clickedOptionText","value","selectedItems","k","classList","remove","add","click","e","stopPropagation","closeAllSelect","toggle","clickedSelect","selectItems","style","display","previousSibling","interval","slideIndex","autoChange","updateAutoChange","window","innerWidth","showSlides","slides","dots","prevButton","getElementById","nextButton","slideCounter","querySelector","className","replace","textContent","disabled","setInterval","prevBtn","nextBtn","changeSlide","n","clearInterval","target","sliderCounter","updateTargetStyles","slideText","translateX","split","map","str","parseInt","width","height","backgroundColor","transform"],"mappings":"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","file":"main.1be6a46d.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\n// Custom-select-language\nconst customSelects = document.getElementsByClassName('custom-select');\n\nfor (let i = 0; i < customSelects.length; i++) {\n  const selectElement = customSelects[i].getElementsByTagName('select')[0];\n  const options = selectElement.options;\n\n  const selectedDiv = document.createElement('DIV');\n\n  selectedDiv.setAttribute('class', 'select-selected');\n  selectedDiv.innerHTML = options[selectElement.selectedIndex].innerHTML;\n  customSelects[i].appendChild(selectedDiv);\n\n  const optionListDiv = document.createElement('DIV');\n\n  optionListDiv.setAttribute('class', 'select-items select-hide');\n\n  for (let j = 1; j < options.length; j++) {\n    const optionDiv = document.createElement('DIV');\n\n    optionDiv.innerHTML = options[j].innerHTML;\n\n    optionDiv.addEventListener('click', function() {\n      const clickedOptionText = this.innerHTML;\n\n      selectElement.value = clickedOptionText;\n      selectedDiv.innerHTML = clickedOptionText;\n\n      const selectedItems\n        = optionListDiv.getElementsByClassName('same-as-selected');\n\n      for (let k = 0; k < selectedItems.length; k++) {\n        selectedItems[k].classList.remove('same-as-selected');\n      }\n      this.classList.add('same-as-selected');\n      selectedDiv.click();\n    });\n\n    optionListDiv.appendChild(optionDiv);\n  }\n\n  customSelects[i].appendChild(optionListDiv);\n\n  selectedDiv.addEventListener('click', function(e) {\n    e.stopPropagation();\n    closeAllSelect(this);\n    optionListDiv.classList.toggle('select-hide');\n    this.classList.toggle('select-arrow-active');\n  });\n}\n\nfunction closeAllSelect(clickedSelect) {\n  const selectItems = document.getElementsByClassName('select-items');\n  const selectedItems = document.getElementsByClassName('select-selected');\n\n  for (let i = 0; i < selectedItems.length; i++) {\n    if (clickedSelect === selectedItems[i]) {\n      continue;\n    }\n    selectedItems[i].classList.remove('select-arrow-active');\n  }\n\n  for (let i = 0; i < selectItems.length; i++) {\n    if (selectItems[i].style.display !== 'none'\n      && selectItems[i].previousSibling !== clickedSelect) {\n      selectItems[i].classList.add('select-hide');\n    }\n  }\n}\n\ndocument.addEventListener('click', function() {\n  closeAllSelect();\n});\n\n// Slide-show\nlet slideIndex = 1; // Set the slide index to 1 (first slide)\nlet autoChange = true; // Default to enable automatic slide change\nlet interval; // Variable to store the interval\n\n// Function to check the viewport window width\nfunction updateAutoChange() {\n  autoChange = window.innerWidth < 1280;\n}\n\nupdateAutoChange(); // Call the function to initialize autoChange on startup\n\n// Function to handle the window resize event\nwindow.addEventListener('resize', () => {\n  updateAutoChange(); // Update the value of autoChange on window resize\n});\n\nshowSlides();\n\nfunction showSlides() {\n  let i;\n  const slides = document.getElementsByClassName('mySlides');\n  const dots = document.getElementsByClassName('dot');\n  const prevButton = document.getElementById('prevButton');\n  const nextButton = document.getElementById('nextButton');\n  const slideCounter = document.querySelector('.slide-counter');\n\n  for (i = 0; i < slides.length; i++) {\n    slides[i].style.display = 'none';\n  }\n\n  if (slideIndex > slides.length) {\n    slideIndex = 1; // Return to the first slide when reaching the last one\n  }\n\n  if (slideIndex < 1) {\n    slideIndex = slides.length; // If index < 1, set index = 5\n  }\n\n  for (i = 0; i < dots.length; i++) {\n    dots[i].className = dots[i].className.replace(' active', '');\n  }\n\n  slides[slideIndex - 1].style.display = 'block';\n  dots[slideIndex - 1].className += ' active';\n\n  // Update the slide number in the `.slide-counter` div\n  slideCounter.textContent = `${slideIndex}/${slides.length}`;\n\n  // Disable the \"Previous\" button when the slide number is 1/5\n  if (slideIndex === 1) {\n    prevButton.disabled = true;\n  } else {\n    prevButton.disabled = false;\n  }\n\n  // Disable the \"Next\" button when the slide number is 5/5\n  if (slideIndex === slides.length) {\n    nextButton.disabled = true;\n  } else {\n    nextButton.disabled = false;\n  }\n\n  if (autoChange) {\n    slideIndex++;\n  }\n}\n\n// Start automatic slide change using setInterval\ninterval = setInterval(showSlides, 5000);\n\n// Button handling\nconst prevBtn = document.getElementById('prevButton');\nconst nextBtn = document.getElementById('nextButton');\n\nprevBtn.addEventListener('click', () => {\n  changeSlide(-1); // Change by 1 slide backwards\n});\n\nnextBtn.addEventListener('click', () => {\n  changeSlide(1); // Change by 1 slide forwards\n});\n\nfunction changeSlide(n) {\n  autoChange = false;\n\n  clearInterval(interval); // Stop the previous interval\n\n  showSlides(slideIndex += n); // Change by n slides\n\n  // Check if there's a next slide for next-btn\n  if (slideIndex !== 5) {\n    nextBtn.classList.remove('inactive-next-btn'); // Remove the inactive class\n    nextBtn.classList.add('next-btn'); // Add native class\n  } else {\n    nextBtn.classList.add('inactive-next-btn'); // Add the inactive class\n    nextBtn.classList.remove('next-btn'); // Remove native class\n  }\n\n  // Check if there's a next slide for previous-btn\n  if (slideIndex !== 1) {\n    prevBtn.classList.remove('previous-btn'); // Remove the inactive class\n    prevBtn.classList.add('active-previous-btn'); // Add native class\n  } else {\n    prevBtn.classList.remove('active-previous-btn'); // Add native class\n    prevBtn.classList.add('previous-btn'); // Remove the inactive class\n  }\n\n  // Start a new automatic slide change using setInterval\n  interval = setInterval(showSlides, 5000);\n}\n\n// Pobierz elementy .target i .slide-counter\nconst target = document.querySelector('.target');\nconst sliderCounter = document.querySelector('.slide-counter');\n\n// Funkcja do ustawiania odpowiednich stylów .target na podstawie numeru slajdu\nfunction updateTargetStyles() {\n  const slideText = sliderCounter.textContent;\n  const [currentSlide] = slideText.split('/').map((str) => parseInt(str));\n  // Oblicz przesunięcie X dla transformacji\n  const translateX = (currentSlide - 1) * 41.4;\n\n  // Ustaw odpowiednie style w zależności od numeru slajdu\n  target.style.width = '41.4px';\n  target.style.height = '1px';\n  target.style.backgroundColor = '$c-contrast';\n  target.style.transform = `translateX(${translateX}px)`;\n}\n\n// Wywołaj funkcję na początku i zaktualizuj style .target\nupdateTargetStyles();\n\n// Nasłuchuj zmian w .slide-counter i aktualizuj style .target\nsliderCounter.addEventListener('DOMSubtreeModified', updateTargetStyles);\n"]}